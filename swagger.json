{
  "openapi": "3.0.1",
  "info": {
    "title": "Task Pro API",
    "description": "API documentation for Task Pro",
    "version": "1.0.0",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],

  "servers": [
    {
      "url": "https://task-pro-api-763i.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],

  "tags": [
    {
      "name": "Users",
      "description": "Endpoints related to user management"
    },
    {
      "name": "Boards",
      "description": "Endpoints related to user`s boards"
    },
    {
      "name": "Columns",
      "description": "Endpoints related to columns of boards"
    },
    {
      "name": "Cards",
      "description": "Endpoints related to cards of columns"
    }
  ],

  "paths": {
    "/api/users/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Registers a new user with email, password and name",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "Login a user",
        "description": "Authenticates a user and returns a JWT token.",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "summary": "Logout a user",
        "description": "Logs out the user by invalidating the JWT token.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully logged out"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "summary": "Get current user",
        "description": "Gets the details of the currently authenticated user.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Current user details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        }
      }
    },
    "/api/users/edit": {
      "patch": {
        "summary": "Edit user profile",
        "description": "Edits the profile of the currently authenticated user.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EditProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unathorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/theme": {
      "patch": {
        "summary": "Change user theme",
        "description": "Changes the theme of the currently authenticated user.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeThemeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Theme changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeThemeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/help": {
      "put": {
        "summary": "Request help",
        "description": "Submits a help request for the currently authenticated user.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelpRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success. Email sent successfully."
          },
          "400": {
            "description": "Bad request. Missing or invalid parameters.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad Request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/boards": {
      "post": {
        "summary": "Create a new board",
        "tags": ["Boards"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all boards",
        "tags": ["Boards"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of boards",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AllBoardResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/boards/{id}": {
      "get": {
        "summary": "Get board by ID",
        "tags": ["Boards"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Board ID"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Board found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetBoardByIdResponse"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Board not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Boards"],
        "summary": "Delete a board by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ObjectId"
            },
            "description": "ID of the board to delete"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Board deleted successfully"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Board not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "summary": "Update a board by ID",
        "tags": ["Boards"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            },
            "description": "ID of the board to update"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },

      "patch": {
        "summary": "Change board's background",
        "tags": ["Boards"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeBoardsBackgroundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeBoardsBackgroundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Board not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/columns/{boardId}": {
      "get": {
        "summary": "Get all columns by board ID",
        "tags": ["Columns"],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the board to get columns for"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnArray"
                }
              }
            }
          },
          "404": {
            "description": "Board not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },

    "/api/columns": {
      "post": {
        "summary": "Create a new column",
        "tags": ["Columns"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Column created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Board not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all columns owned by the authenticated user",
        "tags": ["Columns"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of columns owned by the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllColumnsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Invalid or missing authentication token"
          },
          "500": {
            "description": "Internal Server Error: Failed to retrieve columns"
          }
        }
      }
    },

    "/api/columns/{columnId}": {
      "delete": {
        "summary": "Delete a column by ID",
        "tags": ["Columns"],
        "parameters": [
          {
            "name": "columnId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the column to delete"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Column deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteColumnResponse"
                }
              }
            }
          },
          "404": {
            "description": "Column not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a column by ID",
        "tags": ["Columns"],
        "parameters": [
          {
            "name": "columnId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId",
              "example": "6097e7c8f318a2001538e2c7"
            },
            "description": "ID of the column to update"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Column not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/cards": {
      "post": {
        "summary": "Create a new card",
        "tags": ["Cards"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/cards/all": {
      "get": {
        "summary": "Get all cards owned by the authenticated user",
        "tags": ["Cards"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId",
              "example": "6097e7c8f318a2001538e2c7"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllCardsResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User ID not valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/cards/{cardId}": {
      "get": {
        "summary": "Get a card by ID",
        "tags": ["Cards"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId",
              "example": "6097e7c8f318a2001538e2c7"
            },
            "description": "ID of the card"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCardResponse"
                }
              }
            }
          },
          "404": {
            "description": "Card not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },

      "delete": {
        "summary": "Delete a card by ID",
        "tags": ["Cards"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId",
              "example": "6097e7c8f318a2001538e2c7"
            },
            "description": "ID of the card to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Card successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCardResponse"
                }
              }
            }
          },
          "404": {
            "description": "Card not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },

      "put": {
        "summary": "Update a card by ID",
        "tags": ["Cards"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId",
              "example": "6097e7c8f318a2001538e2c7"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Card not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "Bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Enter JWT"
      }
    },
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Vlad"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "vlad@mail.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "12345678"
          }
        },
        "required": ["email", "password", "name"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "vlad@mail.com"
          },
          "password": {
            "type": "string",
            "example": "12345678"
          }
        },
        "required": ["email", "password"]
      },
      "EditProfileRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "columnscards@test.com"
          },
          "name": {
            "type": "string",
            "example": "Vlad"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "12345678"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "example": "(binary)",
            "description": "User's profile picture file"
          }
        },
        "required": []
      },
      "ChangeThemeRequest": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "enum": ["light", "dark", "violet"],
            "example": "dark"
          }
        },
        "required": ["theme"]
      },
      "HelpRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "comment": {
            "type": "string",
            "example": "I need help with something."
          }
        },
        "required": ["email", "comment"]
      },
      "CreateBoardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "My Board"
          },
          "background": {
            "type": "string",
            "example": "task-bg-phone-3"
          },
          "icon": {
            "type": "string",
            "example": "icon-board"
          }
        },
        "required": ["title"]
      },
      "UpdateBoardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "My Board"
          },
          "background": {
            "type": "string",
            "example": "task-bg-phone-3"
          },
          "icon": {
            "type": "string",
            "example": "icon-board"
          }
        }
      },
      "ChangeBoardsBackgroundRequest": {
        "type": "object",
        "properties": {
          "background": {
            "type": "string",
            "example": "task-bg-phone-3"
          }
        },
        "required": ["background"]
      },
      "CreateColumnRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "In progress"
          },
          "boardId": {
            "type": "ef003-14"
          }
        },
        "required": ["title", "boardId"]
      },
      "ColumnUpdateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "In progress"
          },
          "boardId": {
            "type": "string",
            "format": "objectId",
            "example": "60c72b2f9b1e8a6d4c7"
          },
          "owner": {
            "type": "string",
            "format": "objectId",
            "example": "60c72b2f9b1e8a6d4c7"
          }
        },
        "required": ["title"]
      },
      "CreateCardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Task"
          },
          "description": {
            "type": "string",
            "example": "Complete all the pending tasks for the project"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high", "without"],
            "example": "high"
          },
          "deadline": {
            "type": "string",
            "format": "date",
            "example": "2024-06-18"
          },
          "columnId": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7"
          }
        },
        "required": ["title", "columnId"]
      },
      "UpdateCardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Task"
          },
          "description": {
            "type": "string",
            "example": "Complete all the pending tasks for the project"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high", "without"],
            "example": "high"
          },
          "deadline": {
            "type": "string",
            "format": "date",
            "example": "2024-06-18"
          },
          "columnId": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7"
          }
        },
        "required": ["title", "columnId"]
      },

      "RegisterResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Vlad"
              },
              "email": {
                "type": "string",
                "example": "vlad@mail.com"
              },
              "avatarURL": {
                "type": "string",
                "format": "url",
                "example": "http://res.cloudinary.com/daqlrgzqj/image/upload/v1718476036/avatars/t7axgw8iupoavdq24nwq.jpg"
              }
            },
            "required": ["name", "email", "avatarURL"]
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "LoginResponse": {
        "type": "object",

        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Vlad"
              },
              "email": {
                "type": "string",
                "example": "vlad@mail.com"
              },
              "avatarURL": {
                "type": "string",
                "format": "url",
                "example": "http://res.cloudinary.com/daqlrgzqj/image/upload/v1718476036/avatars/t7axgw8iupoavdq24nwq.jpg"
              },
              "theme": {
                "type": "string",
                "example": "dark"
              }
            },
            "required": ["name", "email", "avatarURL"]
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": ["user", "token"]
      },
      "CurrentUserResponse": {
        "type": "object",

        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "columnscards@test.com"
          },
          "name": {
            "type": "string",
            "example": "Vlad"
          },

          "avatarURL": {
            "type": "string",
            "format": "url",
            "example": "http://res.cloudinary.com/daqlrgzqj/image/upload/v1718476036/avatars/t7axgw8iupoavdq24nwq.jpg"
          },
          "theme": {
            "type": "string",
            "example": "dark"
          }
        }
      },
      "EditProfileResponse": {
        "type": "object",

        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "columnscards@test.com"
          },
          "name": {
            "type": "string",
            "example": "Vlad"
          },

          "avatarURL": {
            "type": "string",
            "format": "url",
            "example": "http://res.cloudinary.com/daqlrgzqj/image/upload/v1718476036/avatars/t7axgw8iupoavdq24nwq.jpg"
          }
        }
      },
      "ChangeThemeResponse": {
        "type": "object",

        "properties": {
          "theme": {
            "type": "string",
            "enum": ["light", "dark", "violet"],

            "example": "dark"
          },
          "avatarURL": {
            "type": "string",
            "format": "url",
            "example": "http://res.cloudinary.com/daqlrgzqj/image/upload/v1718476036/avatars/t7axgw8iupoavdq24nwq.jpg"
          }
        }
      },
      "CreateBoardResponse": {
        "type": "object",
        "properties": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "6123456789abcdef01234567"
            },
            "title": {
              "type": "string",
              "example": "My Board"
            },
            "background": {
              "type": "string",
              "example": "task-bg-phone-3"
            },
            "icon": {
              "type": "string",
              "example": "icon-board"
            },
            "owner": {
              "type": "string",
              "example": "6123456789abcdef01234567"
            }
          }
        }
      },
      "AllBoardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Board ID",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "name": {
            "type": "string",
            "description": "Board name",
            "example": "In progress"
          },
          "owner": {
            "type": "string",
            "description": "Owner ID",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          }
        }
      },

      "GetBoardByIdResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "6123456789abcdef01234567"
          },
          "name": {
            "type": "string",
            "example": "My Board"
          },
          "owner": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateBoardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "title": {
            "type": "string",
            "example": "My Board"
          },
          "background": {
            "type": "string",
            "example": "task-bg-phone-3"
          },
          "icon": {
            "type": "string",
            "example": "icon-board"
          }
        }
      },
      "ChangeBoardsBackgroundResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "title": {
            "type": "string",
            "example": "My Board"
          },
          "background": {
            "type": "string",
            "example": "task-bg-phone-3"
          },
          "icon": {
            "type": "string",
            "example": "icon-board"
          },
          "owner": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          }
        }
      },
      "CreateColumnResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "title": {
            "type": "string",
            "example": "My Board"
          },
          "boardId": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "GetAllColumnsResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier for the column",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "name": {
            "type": "string",
            "description": "Name of the column",
            "example": "My Board"
          },
          "owner": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the column was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the column was last updated"
          }
        }
      },

      "DeleteColumnResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "ID of the column",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "title": {
            "type": "string",
            "description": "Title of the column",
            "example": "Task"
          },
          "boardId": {
            "type": "string",
            "description": "ID of the board to which the column belongs",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "owner": {
            "type": "string",
            "description": "ID of the user who owns the column",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          }
        }
      },
      "ColumnUpdateResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "title": {
            "type": "string",
            "example": "Task"
          },
          "boardId": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "owner": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          }
        }
      },
      "CreateCardResponse": {
        "type": "object",
        "properties": {
          "card": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "Task"
              },
              "description": {
                "type": "string",
                "example": "To do it"
              },
              "priority": {
                "type": "string",
                "enum": ["low", "medium", "high"],
                "example": "high"
              },
              "deadline": {
                "type": "string",
                "format": "date",
                "example": "2024-06-18"
              },
              "columnId": {
                "type": "string",
                "example": "60c72b2f9b1e8a6d4c7a9a1d"
              },
              "owner": {
                "type": "string",
                "example": "60c72b2f9b1e8a6d4c7a9a1d"
              }
            }
          }
        }
      },
      "GetAllCardsResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the card",
            "example": "Task A"
          },
          "description": {
            "type": "string",
            "description": "Description of the card",
            "example": "This is a task that needs to be completed."
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high", "without"],
            "example": "high"
          },
          "deadline": {
            "type": "string",
            "format": "date",
            "example": "2024-06-18"
          },
          "columnId": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "owner": {
            "type": "string",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          }
        },
        "required": ["title", "columnId"],
        "example": {
          "title": "Task A",
          "description": "This is a task that needs to be completed.",
          "priority": "medium",
          "deadline": "2024-06-18",
          "columnId": "5fd3c0e1577a1a1f240c7ea1",
          "owner": "5fd3c0e1577a1a1f240c7e99"
        }
      },
      "GetCardResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the card",
            "example": "Task A"
          },
          "description": {
            "type": "string",
            "description": "Description of the card",

            "example": "This is a description"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high", "without"],

            "description": "Priority of the card",
            "example": "medium"
          },
          "deadline": {
            "type": "string",
            "format": "date",
            "example": "2024-06-18"
          },
          "columnId": {
            "type": "string",
            "example": "60a78d33b30f0848481e7a4d"
          },
          "owner": {
            "type": "string",

            "example": "60a78d33b30f0848481e7a4e"
          }
        }
      },
      "DeleteCardResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the card",
            "example": "Task ABC"
          },
          "description": {
            "type": "string",
            "description": "Description of the card",
            "example": "Detailed description of the task"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high", "without"],

            "example": "high"
          },
          "deadline": {
            "type": "string",
            "format": "date",
            "example": "2024-06-18"
          },
          "columnId": {
            "type": "string",
            "description": "ID of the column to which the card belongs",
            "example": "6123456789abcdef1234567"
          },
          "owner": {
            "type": "string",
            "description": "ID of the user who owns the card",
            "example": "6123456789abcdef1234567"
          }
        }
      },
      "UpdateCardResponse": {
        "type": "object",
        "properties": {
          "card": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60a78d33b30f0848481e7a4e"
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "example": "Task"
              },
              "priority": {
                "type": "string",
                "enum": ["low", "medium", "high", "without"],
                "example": "high"
              },
              "deadline": {
                "type": "string",
                "format": "date",
                "example": "2024-06-18"
              },
              "columnId": {
                "type": "string",
                "example": "6097e7c8f318a2001538e2c7"
              },
              "owner": {
                "type": "string",
                "format": "objectId",
                "example": "6097e7c8f318a2001538e2c7"
              }
            },
            "required": ["_id", "title", "columnId"]
          }
        }
      }
    }
  }
}
